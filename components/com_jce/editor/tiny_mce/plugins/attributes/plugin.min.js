/**
 * editor_plugin_src.js
 *
 * Copyright 2009, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://tinymce.moxiecode.com/contributing
 */

(function (tinymce) {
    var each = tinymce.each, DOM = tinymce.DOM;

    // Register plugin
    tinymce.PluginManager.add('attributes', function (ed, url) {
        ed.addButton('attribs', {
            title: 'attribs.desc',
            cmd: 'mceAttributes'
        });

        ed.onNodeChange.add(function (ed, cm, n, co) {
            cm.setDisabled('attribs', n && n.nodeName == 'BODY');

            // Activate all
            if (n) {
                do {
                    cm.setDisabled(n.nodeName.toLowerCase(), 0);
                    cm.setActive(n.nodeName.toLowerCase(), 1);
                } while (n = n.parentNode);
            }
        });

        ed.onPreInit.add(function () {
            ed.formatter.register({
                attributes: {
                    inline: 'span',
                    remove: 'all',
                    onformat: function (elm, fmt, vars) {
                        each(vars, function (value, key) {
                            ed.dom.setAttrib(elm, key, value);
                        });
                    }
                }
            });

            var cm = ed.controlManager, form = cm.createForm('attributes_form');

            var filter = [''], boolAttrs = ed.schema.getBoolAttrs();

            // Register commands
            ed.addCommand('mceAttributes', function () {
                ed.windowManager.open({
                    title: ed.getLang('attributes.desc', 'Attributes'),
                    //items: [form],
                    size: 'mce-modal-landscape-small',
                    open: function () {
                        var label = ed.getLang('insert', 'Insert'), node = ed.selection.getNode();

                        if (node) {
                            var name = node.nodeName.toLowerCase(), elm = ed.schema.elements[name] || {};

                            form.empty();

                            if (elm.attributes) {
                                each(elm.attributes, function (val, key) {
                                    var ctrl;

                                    if (key.indexOf('on') === 0) {
                                        return true;
                                    }

                                    if (key.indexOf('item') === 0) {
                                        return true;
                                    }

                                    if (boolAttrs[key]) {
                                        ctrl = cm.createListBox(key + '_ctrl', {
                                            label: ed.getLang(key, key),
                                            name: key,
                                            items: [
                                                {
                                                    title: 'Yes',
                                                    value: '1'
                                                },
                                                {
                                                    title: 'No',
                                                    value: '0'
                                                }
                                            ]
                                        });
                                    } else {
                                        ctrl = cm.createTextBox(key + '_ctrl', {
                                            label: ed.getLang(key, key),
                                            name: key
                                        });
                                    }

                                    form.add(ctrl);
                                });
                            }

                            form.renderTo(this.id + '_content');
                        }

                        /*if (src) {
                            label = ed.getLang('update', 'Update');
                        }*/

                        DOM.setHTML(this.id + '_insert', label);
                    },
                    buttons: [
                        {
                            title: ed.getLang('common.cancel', 'Cancel'),
                            id: 'cancel'
                        },
                        {
                            title: ed.getLang('insert', 'Insert'),
                            id: 'insert',
                            onsubmit: function (e) {
                                var data = form.submit();
                                Event.cancel(e);
                            },
                            classes: 'primary',
                            scope: self
                        }
                    ]
                });
            });
        });
    });
})(wfe);
